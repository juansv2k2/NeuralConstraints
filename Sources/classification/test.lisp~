(defvar training-inputs
  '(( 1 2 3 4 )
    (5 6 7 8 )
    (-1 -2 -3 -4)
    (-5 -6 -7 -7)))

(defvar training-targets
  '((1) (1) (1) (1)))

( defun normalize
  ( input )
  ( map 'vector
    ( lambda
      ( x )
      ( print
        ( coerce
          ( -
            ( / x 64.000000 )
            1.000000 )
          'double-float )
        )
      )
    input )
  )
( defun normalize1
  ( input )
  ( map 'vector
    ( lambda
      ( x )
      ( if
        ( = x 1 )
        1.0d0 -1.0d0 )
      )
    input )
  )
( defun denormalize1
  ( input )
  ( map 'vector
    ( lambda
      ( x )
      ( *
        ( + x 1.000000 )
        64.000000 )
      )
    input )
  )
( defun denormalize2
  ( output )
  ( map 'list
    ( lambda
      ( x )
      ( if
        ( plusp x )
        1 0 )
      )
    output )
  )
( defvar inputs
  ( mapcar #'normalize1
    ( mapcar
      ( function
        ( lambda
          ( x )
          ( apply #'vector x )
          )
        )
      ( quote ( training-inputs ) )
      )
    )
  )
( defvar targets
  ( mapcar #'normalize1
    ( mapcar
      ( function
        ( lambda
          ( x )
          ( apply #'vector x )
          )
        )
      ( quote ( training-targets ))
      )
    )
  )
